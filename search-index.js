var N=null,E="",T="t",U="u",searchIndex={};
var R=["Direction","stepper","direction","result","try_from","try_into","borrow","borrow_mut","type_id","typeid","enablepin","steppin","directionpin","formatter","EnablePin","DirectionPin","cv::error","cv::error::Error","mouse_events","mouseevents","toopencvscalar","contours","videocapture","videowriter","cv::colors","to_owned","clone_into","to_string","cv::contour","cv::gui","cv::gui::mouse_events","cv::point","cv::rect","cv::videoio","to_opencv_scalar","opencvscalar","cv::mat","in_range","hsvrange","find_contours","serialize","deserialize","backtrace","HSVRange","ToOpencvScalar","Contours","MouseEvent","FindContours","VideoCapture","VideoWriter","MouseMove","MouseLeftBtnDown","MouseLeftBtnUp","MouseLeftBtnDplClick","MouseRightBtnDown","MouseRightBtnUp","MouseRightBtnDplClick","string","airhobot::prelude","airhobot::prelude::Error","airhobot","default","option","puckspeed","PuckSpeed","Detector","source","LeftBtnDown","LeftBtnUp","LeftBtnDplClick","RightBtnDown","RightBtnUp","RightBtnDplClick","MouseEvents","duration","InRange","as_error_source","into_iter","description"];
searchIndex["airhobot"]={"doc":"Air-Hockey Robot","i":[[4,R[64],R[60],E,N,N],[13,"Slow",E,E,0,N],[13,"Fast",E,E,0,N],[13,"Wormhole",E,E,0,N],[5,"detect",E,E,N,[[["mat"],["s"],["detector"]],[[R[3],[R[21]]],[R[21]]]]],[0,"prelude",E,E,N,N],[8,R[47],R[58],E,N,N],[10,R[39],E,E,1,[[["self"]],[R[21]]]],[8,R[75],E,E,N,N],[10,R[37],E,E,2,[[[R[38]],["self"]],[["mat",["gray"]],["gray"]]]],[8,"ToHSV",E,E,N,N],[10,"to_hsv",E,E,3,[[["self"]],[["mat",["hsv"]],["error"],[R[3],["mat","error"]]]]],[11,"convert",E,E,3,[[["mat"],["i32"]],[["mat",["hsv"]],["error"],[R[3],["mat","error"]]]]],[6,R[73],E,E,N,N],[4,R[46],E,E,N,N],[13,"Move",E,E,4,N],[13,R[67],E,E,4,N],[13,R[68],E,E,4,N],[13,R[69],E,E,4,N],[13,R[70],E,E,4,N],[13,R[71],E,E,4,N],[13,R[72],E,E,4,N],[3,"Config",E,E,N,N],[12,"roi",E,E,5,N],[12,"filter",E,E,5,N],[12,"pusher",E,E,5,N],[12,"puck",E,E,5,N],[12,"driver",E,E,5,N],[3,"Roi",E,E,N,N],[12,"lt",E,E,6,N],[12,"rt",E,E,6,N],[12,"rb",E,E,6,N],[12,"lb",E,E,6,N],[3,"Filter",E,E,N,N],[12,"blur",E,E,7,N],[12,"erode",E,E,7,N],[12,"dilate",E,E,7,N],[3,R[65],E,E,N,N],[12,"color",E,E,8,N],[12,"h_offset",E,E,8,N],[12,"s_offset",E,E,8,N],[12,"v_offset",E,E,8,N],[12,"area_range",E,E,8,N],[12,"min_vertices",E,E,8,N],[3,"Driver",E,E,N,N],[12,"addr",E,E,9,N],[12,"delay",E,E,9,N],[12,"factor",E,E,9,N],[3,"State",E,E,N,N],[12,"ts",E,E,10,N],[12,"cfg",E,E,10,N],[12,"frame",E,E,10,N],[12,"frame_orig",E,E,10,N],[12,"pusher",E,E,10,N],[12,"puck",E,E,10,N],[12,"history",E,E,10,N],[4,"Error",E,E,N,N],[13,"Arguments",E,E,11,N],[12,"msg",R[59],E,11,N],[13,"Generic",R[58],E,11,N],[12,"msg",R[59],E,11,N],[13,"Cv",R[58],E,11,N],[12,R[66],R[59],E,11,N],[13,"IOErr",R[58],E,11,N],[12,R[66],R[59],E,11,N],[13,"Serde",R[58],E,11,N],[12,R[66],R[59],E,11,N],[4,"Source",R[58],"Input source. Can be an Image, Video or Cam.",N,N],[13,"Image",E,E,12,N],[13,"Stream",E,E,12,N],[5,"predict",E,E,N,[[["point"],["mat"]],[["vec",["point"]],["point"]]]],[5,"asset_path",E,E,N,[[["str"]],["pathbuf"]]],[6,"Result",E,E,N,N],[6,"Cfg",E,E,N,N],[11,"new",R[60],E,0,[[["f64"],[R[74]]],["self"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",R[58],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[3]]]],[11,R[5],E,E,5,[[],[R[3]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[25],E,E,6,[[["self"]],[T]]],[11,R[26],E,E,6,[[["self"],[T]]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[27],E,E,11,[[["self"]],[R[57]]]],[11,R[4],E,E,11,[[[U]],[R[3]]]],[11,R[5],E,E,11,[[],[R[3]]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,R[76],E,E,11,[[["self"]],["error"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[77],E,E,12,[[],["i"]]],[11,R[4],E,E,12,[[[U]],[R[3]]]],[11,R[5],E,E,12,[[],[R[3]]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"fmt",E,E,4,[[[R[13]],["self"]],[["error"],[R[3],["error"]]]]],[11,"from",E,E,11,[[["error"]],["self"]]],[11,"from",E,E,11,[[[R[57]]],["self"]]],[11,"from",E,E,11,[[["str"]],["self"]]],[11,"from",E,E,11,[[["error"]],["self"]]],[11,"from",E,E,11,[[["error"]],["self"]]],[11,"from",E,E,11,[[["poisonerror"]],["self"]]],[11,"from",E,E,11,[[["recverror"]],["self"]]],[11,"next",E,E,12,[[["self"]],[R[62]]]],[11,"clone",E,E,6,[[["self"]],["roi"]]],[11,R[61],E,E,5,[[],["self"]]],[11,R[61],E,E,6,[[],["roi"]]],[11,R[61],E,E,7,[[],["filter"]]],[11,R[61],E,E,9,[[],["self"]]],[11,"eq",R[60],E,0,[[[R[63]],["self"]],["bool"]]],[11,"fmt",R[58],E,11,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[60],E,0,[[["self"],[R[13]]],[R[3]]]],[11,R[78],R[58],E,11,[[["self"]],["str"]]],[11,"cause",E,E,11,[[["self"]],[["error"],[R[62],["error"]]]]],[11,R[66],E,E,11,[[["self"]],[["error"],[R[62],["error"]]]]],[11,R[40],E,E,5,[[["self"],["__s"]],[R[3]]]],[11,R[40],E,E,6,[[["self"],["__s"]],[R[3]]]],[11,R[40],E,E,7,[[["self"],["__s"]],[R[3]]]],[11,R[40],E,E,8,[[["self"],["__s"]],[R[3]]]],[11,R[40],E,E,9,[[["self"],["__s"]],[R[3]]]],[11,R[41],E,E,5,[[["__d"]],[R[3]]]],[11,R[41],E,E,6,[[["__d"]],[R[3]]]],[11,R[41],E,E,7,[[["__d"]],[R[3]]]],[11,R[41],E,E,8,[[["__d"]],[R[3]]]],[11,R[41],E,E,9,[[["__d"]],[R[3]]]],[11,R[42],E,E,11,[[["self"]],[[R[62],[R[42]]],[R[42]]]]],[11,"load",E,E,5,[[["p"]],[R[3]]]],[11,"save",E,E,5,[[["self"],["p"]],[R[3]]]],[11,"new",E,E,6,[[["i32"]],["self"]]],[11,"from_array",E,E,6,[[],["self"]]],[11,"from_vec",E,E,6,[[["vec",["point"]],["point"]],[R[3]]]],[11,"from_frame",E,E,6,[[["mat"]],["self"]]],[11,"to_array",E,E,6,[[["self"]]]],[11,"color_range",E,E,8,[[["self"]],[[R[38]],[R[3],[R[38]]]]]],[11,"cam",E,"use the cam as input source.",12,[[["i32"]],[R[3]]]],[11,"video",E,"use the video file as input source.",12,[[["p"]],[R[3]]]],[11,"image",E,"use the image file as input source.",12,[[["p"]],[R[3]]]],[11,"grab",E,E,12,[[["self"]],[["mat",["bgr"]],[R[62],["mat"]]]]],[11,"new",E,E,10,[[["mat",["bgr"]],["bgr"],["cfg"]],["self"]]],[11,"next",E,E,10,[[["mat",["bgr"]],["bgr"]],["self"]]],[11,"crop_frame",E,E,10,[[["self"]],[R[3]]]],[11,"apply_filter_frame",E,E,10,[[["self"]],[R[3]]]],[11,"puck_speed",E,E,10,[[["self"]],[[R[63]],[R[62],[R[63]]]]]],[11,"point",E,E,4,[[["self"]],["point"]]],[11,"is_kind",E,E,4,[[["self"]],["bool"]]]],"p":[[4,R[64]],[8,R[47]],[8,R[75]],[8,"ToHSV"],[4,R[46]],[3,"Config"],[3,"Roi"],[3,"Filter"],[3,R[65]],[3,"Driver"],[3,"State"],[4,"Error"],[4,"Source"]]};
searchIndex["airhobot_stepper_actor"]={"doc":E,"i":[],"p":[]};
searchIndex["cv"]={"doc":E,"i":[[4,"CVType","cv",E,N,N],[13,"CV8UC1",E,"8 bit unsigned, single channel",0,N],[13,"CV8SC1",E,"8 bit signed, single channel",0,N],[13,"CV8UC3",E,"8 bit unsigned, three channels",0,N],[13,"CV8SC3",E,"8 bit signed, three channel",0,N],[0,"colors",E,E,N,N],[3,"BGR",R[24],"Represents a BGR color",N,N],[3,"HSV",E,E,N,N],[3,R[43],E,E,N,N],[3,"RGB",E,"Represents a RGB color",N,N],[11,"new",E,E,1,[[["u8"]],["bgr"]]],[11,"new",E,E,2,[[["u8"]],[["error"],[R[3],["hsv","error"]],["hsv"]]]],[11,"unsafe_new",E,E,2,[[["u8"]],["hsv"]]],[11,"adjust",E,E,2,[[["self"]],["hsv"]]],[11,"new",E,E,3,[[["rangeinclusive",["u8"]],["u8"]],[[R[3],["error"]],["error"]]]],[11,"from_hsv",E,E,3,[[["hsv"]],[[R[3],["error"]],["error"]]]],[11,"min",E,E,3,[[["self"]],["hsv"]]],[11,"max",E,E,3,[[["self"]],["hsv"]]],[11,"new",E,E,4,[[["u8"]],["self"]]],[11,"red",E,E,4,[[],["self"]]],[11,"green",E,E,4,[[],["self"]]],[11,"blue",E,E,4,[[],["self"]]],[11,"black",E,E,4,[[],["self"]]],[11,"white",E,E,4,[[],["self"]]],[8,R[44],E,E,N,N],[10,R[34],E,E,5,[[["self"]],[R[35]]]],[0,"contour","cv",E,N,N],[3,"Contour",R[28],E,N,N],[3,R[45],E,E,N,N],[11,"points",E,E,6,[[["self"]],[["vec",["point"]],["point"]]]],[11,"len",E,E,6,[[["self"]],["usize"]]],[11,"area",E,E,6,[[["self"]],["f64"]]],[11,"arc_length",E,E,6,[[["self"],["bool"]],["f64"]]],[11,"bounding_rect",E,E,6,[[["self"]],["rect"]]],[11,"approx_poly_dp",E,E,6,[[["f64"],["self"],["bool"]],["self"]]],[11,"center",E,E,6,[[["self"]],["point"]]],[11,"len",E,E,7,[[["self"]],["usize"]]],[11,"iter",E,E,7,[[["self"]]]],[0,"error","cv",E,N,N],[4,"Error",R[16],E,N,N],[13,"OpenCV",E,E,8,N],[12,R[66],R[17],E,8,N],[13,"Cam",R[16],E,8,N],[12,R[66],R[17],E,8,N],[13,"VideoIO",R[16],E,8,N],[12,R[66],R[17],E,8,N],[13,"UserInput",R[16],E,8,N],[12,"msg",R[17],E,8,N],[0,"gui","cv",E,N,N],[3,"GUI",R[29],"Simple GUI",N,N],[4,R[46],E,E,N,N],[13,"Move",E,E,9,N],[13,R[67],E,E,9,N],[13,R[68],E,E,9,N],[13,R[69],E,E,9,N],[13,R[70],E,E,9,N],[13,R[71],E,E,9,N],[13,R[72],E,E,9,N],[0,R[18],E,E,N,N],[3,R[50],R[30],E,N,N],[3,R[51],E,E,N,N],[3,R[52],E,E,N,N],[3,R[53],E,E,N,N],[3,R[54],E,E,N,N],[3,R[55],E,E,N,N],[3,R[56],E,E,N,N],[6,R[73],R[29],E,N,N],[11,"new",E,E,10,[[["str"]],["gui"]]],[11,"destroy",E,E,10,[[["self"]]]],[11,"show",E,E,10,[[["self"],["mat"]],[[R[3],["error"]],["error"]]]],[11,"show_for",E,E,10,[[[R[74]],["self"],["mat"]],[["error"],["char"],[R[3],["char","error"]]]]],[11,"slider",E,E,10,[[["i32"],["s"],["self"],["range",["i32"]]],[["receiver",["i32"]],["i32"]]]],[11,R[18],E,E,10,[[["self"]],[R[19]]]],[11,"mouse_events_for",E,E,10,[[["self"]],[R[19]]]],[11,"unregister_mouse_callback",E,E,10,[[["self"]]]],[11,"point",E,E,9,[[["self"]],["point"]]],[11,"is_kind",E,E,9,[[["self"]],["bool"]]],[0,"imageio","cv",E,N,N],[5,"imread","cv::imageio",E,N,[[["p"]],[[R[3],["mat","error"]],["mat",["bgr"]],["error"]]]],[0,"mat","cv",E,N,N],[3,"Gray",R[36],E,N,N],[3,"Mat",E,E,N,N],[8,"ToHSV",E,E,N,N],[10,"to_hsv",E,E,11,[[["self"]],[["error"],["mat",["hsv"]],[R[3],["mat","error"]]]]],[11,"convert",E,E,11,[[["mat"],["i32"]],[["error"],["mat",["hsv"]],[R[3],["mat","error"]]]]],[8,R[75],E,E,N,N],[10,R[37],E,E,12,[[["self"],[R[38]]],[["mat",["gray"]],["gray"]]]],[8,R[47],E,E,N,N],[10,R[39],E,E,13,[[["self"]],[R[21]]]],[11,"new",E,E,14,[[[R[20]],["cvtype"],["i32"]],[[R[3],["mat","error"]],["mat"],["error"]]]],[11,"pack",E,E,14,[[["mat"]],["mat"]]],[11,"unpack",E,E,14,[[["self"]],["mat"]]],[11,"roi",E,E,14,[[["rect"],["self"]],[[R[3],["mat","error"]],["mat"],["error"]]]],[11,"lens",E,E,14,[[["self"]],[[R[3],["mat","error"]],["mat"],["error"]]]],[11,"n_rows",E,E,14,[[["self"]],["i32"]]],[11,"n_cols",E,E,14,[[["self"]],["i32"]]],[11,"is_empty",E,E,14,[[["self"]],[[R[3],["bool","error"]],["error"],["bool"]]]],[11,"at",E,E,14,[[["self"],["point"]],[["error"],[R[3],["hsv","error"]],["hsv"]]]],[11,"at_avg",E,E,14,[[["u8"],["self"],["point"]],[["error"],[R[3],["hsv","error"]],["hsv"]]]],[11,"draw_contours",E,E,14,[[["i32"],[R[20]],["self"],[R[21]]]]],[11,"draw_circle",E,E,14,[[["i32"],[R[20]],["self"],["point"]]]],[11,"draw_rect",E,E,14,[[["rect"],[R[20]],["self"],["i32"]]]],[11,"draw_text",E,E,14,[[["str"],["i32"],["c"],["self"],["f64"],["point"]]]],[11,"draw_line",E,E,14,[[["i32"],[R[20]],["self"],["point"]]]],[11,"draw_arrowed_line",E,E,14,[[["point"],["i32"],["self"],["c"]]]],[11,"copy_to",E,E,14,[[["mat"],["self"]],[[R[3],["error"]],["error"]]]],[11,"blur",E,E,14,[[["self"],["i32"]]]],[11,"erode",E,E,14,[[["self"],["i32"]]]],[11,"dilate",E,E,14,[[["self"],["i32"]]]],[0,"point","cv",E,N,N],[3,"Point",R[31],"Point in an 2D environment",N,N],[11,"new",E,E,15,[[["i32"]],["self"]]],[11,"unpack",E,E,15,[[["self"]],["point"]]],[11,"x",E,E,15,[[["self"]],["i32"]]],[11,"y",E,E,15,[[["self"]],["i32"]]],[11,"dist",E,E,15,[[["self"],["point"]],["f64"]]],[11,"norm",E,E,15,[[["self"]],["f64"]]],[0,"rect","cv",E,N,N],[3,"Rect",R[32],E,N,N],[11,"new",E,E,16,[[["i32"]],["self"]]],[11,"center",E,E,16,[[["i32"],["point"]],["self"]]],[11,"contains",E,E,16,[[["self"],["point"]],["bool"]]],[11,"center_at",E,E,16,[[["self"],["point"]]]],[0,"videoio","cv",E,N,N],[3,R[48],R[33],E,N,N],[3,R[49],E,E,N,N],[11,"open_file",E,E,17,[[["path"]],[[R[22]],[R[3],[R[22],"error"]],["error"]]]],[11,"open_device",E,E,17,[[["i32"]],[[R[22]],[R[3],[R[22],"error"]],["error"]]]],[11,"grab",E,E,17,[[["self"]],[[R[3],["mat","error"]],["mat",["bgr"]],["error"]]]],[11,"new",E,E,18,[[["i32"],["path"],["f64"]],[[R[3],[R[23],"error"]],[R[23]],["error"]]]],[11,"write",E,E,18,[[["self"],["mat"]],[[R[3],["error"]],["error"]]]],[0,"prelude","cv",E,N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[25],E,E,0,[[["self"]],[T]]],[11,R[26],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",R[24],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[25],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"],[T]]]],[11,R[27],E,E,2,[[["self"]],[R[57]]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[25],E,E,3,[[["self"]],[T]]],[11,R[26],E,E,3,[[["self"],[T]]]],[11,R[27],E,E,3,[[["self"]],[R[57]]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[25],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",R[28],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[3]]]],[11,R[5],E,E,6,[[],[R[3]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[3]]]],[11,R[5],E,E,7,[[],[R[3]]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"into",R[16],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[27],E,E,8,[[["self"]],[R[57]]]],[11,R[4],E,E,8,[[[U]],[R[3]]]],[11,R[5],E,E,8,[[],[R[3]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,R[76],E,E,8,[[["self"]],["error"]]],[11,"into",R[29],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[3]]]],[11,R[5],E,E,10,[[],[R[3]]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[3]]]],[11,R[5],E,E,9,[[],[R[3]]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"into",R[30],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[25],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"],[T]]]],[11,R[4],E,E,19,[[[U]],[R[3]]]],[11,R[5],E,E,19,[[],[R[3]]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[25],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"],[T]]]],[11,R[4],E,E,20,[[[U]],[R[3]]]],[11,R[5],E,E,20,[[],[R[3]]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[25],E,E,21,[[["self"]],[T]]],[11,R[26],E,E,21,[[["self"],[T]]]],[11,R[4],E,E,21,[[[U]],[R[3]]]],[11,R[5],E,E,21,[[],[R[3]]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[25],E,E,22,[[["self"]],[T]]],[11,R[26],E,E,22,[[["self"],[T]]]],[11,R[4],E,E,22,[[[U]],[R[3]]]],[11,R[5],E,E,22,[[],[R[3]]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[25],E,E,23,[[["self"]],[T]]],[11,R[26],E,E,23,[[["self"],[T]]]],[11,R[4],E,E,23,[[[U]],[R[3]]]],[11,R[5],E,E,23,[[],[R[3]]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[25],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"],[T]]]],[11,R[4],E,E,24,[[[U]],[R[3]]]],[11,R[5],E,E,24,[[],[R[3]]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[25],E,E,25,[[["self"]],[T]]],[11,R[26],E,E,25,[[["self"],[T]]]],[11,R[4],E,E,25,[[[U]],[R[3]]]],[11,R[5],E,E,25,[[],[R[3]]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"into",R[36],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[4],E,E,26,[[[U]],[R[3]]]],[11,R[5],E,E,26,[[],[R[3]]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[25],E,E,14,[[["self"]],[T]]],[11,R[26],E,E,14,[[["self"],[T]]]],[11,R[4],E,E,14,[[[U]],[R[3]]]],[11,R[5],E,E,14,[[],[R[3]]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"into",R[31],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[25],E,E,15,[[["self"]],[T]]],[11,R[26],E,E,15,[[["self"],[T]]]],[11,R[27],E,E,15,[[["self"]],[R[57]]]],[11,R[4],E,E,15,[[[U]],[R[3]]]],[11,R[5],E,E,15,[[],[R[3]]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"into",R[32],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[25],E,E,16,[[["self"]],[T]]],[11,R[26],E,E,16,[[["self"],[T]]]],[11,R[4],E,E,16,[[[U]],[R[3]]]],[11,R[5],E,E,16,[[],[R[3]]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"into",R[33],E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[77],E,E,17,[[],["i"]]],[11,R[4],E,E,17,[[[U]],[R[3]]]],[11,R[5],E,E,17,[[],[R[3]]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[4],E,E,18,[[[U]],[R[3]]]],[11,R[5],E,E,18,[[],[R[3]]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,R[34],R[24],E,1,[[["self"]],[R[35]]]],[11,R[34],E,E,2,[[["self"]],[R[35]]]],[11,R[34],E,E,4,[[["self"]],[R[35]]]],[11,"to_hsv",R[36],E,14,[[["self"]],[["error"],["mat",["hsv"]],[R[3],["mat","error"]]]]],[11,"to_hsv",E,E,14,[[["self"]],[["error"],["mat",["hsv"]],[R[3],["mat","error"]]]]],[11,R[37],E,E,14,[[["self"],[R[38]]],[["mat",["gray"]],["gray"]]]],[11,R[39],E,E,14,[[["self"]],[R[21]]]],[11,"from",R[24],E,1,[[["rgb"]],["bgr"]]],[11,"from",E,E,1,[[["vec3b"]],["bgr"]]],[11,"from",E,E,2,[[["rgb"]],["hsv"]]],[11,"from",E,E,4,[[["bgr"]],["rgb"]]],[11,"from",E,E,4,[[["vec3b"]],["rgb"]]],[11,"from",R[16],E,8,[[["error"]],["self"]]],[11,"next",R[33],E,17,[[["self"]],[R[62]]]],[11,"clone",R[24],E,2,[[["self"]],["hsv"]]],[11,"clone",E,E,3,[[["self"]],[R[38]]]],[11,"clone",E,E,4,[[["self"]],["rgb"]]],[11,"clone",R[30],E,19,[[["self"]],["mousemove"]]],[11,"clone",E,E,20,[[["self"]],["mouseleftbtndown"]]],[11,"clone",E,E,21,[[["self"]],["mouseleftbtnup"]]],[11,"clone",E,E,22,[[["self"]],["mouseleftbtndplclick"]]],[11,"clone",E,E,23,[[["self"]],["mouserightbtndown"]]],[11,"clone",E,E,24,[[["self"]],["mouserightbtnup"]]],[11,"clone",E,E,25,[[["self"]],["mouserightbtndplclick"]]],[11,"clone",R[36],E,14,[[["self"]],["self"]]],[11,"clone",R[31],E,15,[[["self"]],["point"]]],[11,"clone",R[32],E,16,[[["self"]],["rect"]]],[11,"clone","cv",E,0,[[["self"]],["cvtype"]]],[11,R[61],R[31],E,15,[[],["point"]]],[11,"eq",R[24],E,1,[[["bgr"],["self"]],["bool"]]],[11,"ne",E,E,1,[[["bgr"],["self"]],["bool"]]],[11,"eq",E,E,2,[[["hsv"],["self"]],["bool"]]],[11,"ne",E,E,2,[[["hsv"],["self"]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[38]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[38]]],["bool"]]],[11,"eq",E,E,4,[[["self"],["rgb"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["rgb"]],["bool"]]],[11,"eq",R[31],E,15,[[["self"],["point"]],["bool"]]],[11,"ne",E,E,15,[[["self"],["point"]],["bool"]]],[11,"eq",R[32],E,16,[[["self"],["rect"]],["bool"]]],[11,"ne",E,E,16,[[["self"],["rect"]],["bool"]]],[11,"fmt",R[24],E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[16],E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[31],E,15,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[24],E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[16],E,8,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[29],E,10,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[30],E,19,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,20,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,23,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,24,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,25,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[29],E,9,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[36],E,26,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[31],E,15,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",R[32],E,16,[[["self"],[R[13]]],[R[3]]]],[11,"fmt","cv",E,0,[[["self"],[R[13]]],[R[3]]]],[11,"sub",R[31],E,15,[[["point"]]]],[11,"from_iter",R[28],E,7,[[["intoiterator"]],["self"]]],[11,R[78],R[16],E,8,[[["self"]],["str"]]],[11,"cause",E,E,8,[[["self"]],[["error"],[R[62],["error"]]]]],[11,R[66],E,E,8,[[["self"]],[["error"],[R[62],["error"]]]]],[11,R[40],R[24],E,2,[[["self"],["__s"]],[R[3]]]],[11,R[40],E,E,3,[[["self"],["__s"]],[R[3]]]],[11,R[40],R[31],E,15,[[["self"],["__s"]],[R[3]]]],[11,R[41],R[24],E,2,[[["__d"]],[R[3]]]],[11,R[41],E,E,3,[[["__d"]],[R[3]]]],[11,R[41],R[31],E,15,[[["__d"]],[R[3]]]],[11,R[42],R[16],E,8,[[["self"]],[[R[62],[R[42]]],[R[42]]]]]],"p":[[4,"CVType"],[3,"BGR"],[3,"HSV"],[3,R[43]],[3,"RGB"],[8,R[44]],[3,"Contour"],[3,R[45]],[4,"Error"],[4,R[46]],[3,"GUI"],[8,"ToHSV"],[8,R[75]],[8,R[47]],[3,"Mat"],[3,"Point"],[3,"Rect"],[3,R[48]],[3,R[49]],[3,R[50]],[3,R[51]],[3,R[52]],[3,R[53]],[3,R[54]],[3,R[55]],[3,R[56]],[3,"Gray"]]};
searchIndex["simple_stepper_test"]={"doc":E,"i":[],"p":[]};
searchIndex["stepper"]={"doc":E,"i":[[3,R[14],R[1],"GPIO pin number to the 'Enable' pin on the stepper-driver",N,N],[12,"0",E,E,0,N],[3,"StepPin",E,"GPIO pin number to the 'Step' pin on the stepper-driver",N,N],[12,"0",E,E,1,N],[3,R[15],E,"GPIO pin number to the 'Dir' pin on the stepper-driver",N,N],[12,"0",E,E,2,N],[3,"Stepper",E,"Represents a stepper",N,N],[4,R[0],E,R[0],N,N],[13,"Left",E,E,3,N],[13,"Right",E,E,3,N],[11,"new",E,"Initialize the stepper",4,[[["str"],[R[10]],[R[12]],[R[11]]],[[R[3],[R[1],"box"]],[R[1]],["box",["error"]]]]],[11,"enable",E,E,4,[[["self"]]]],[11,"disable",E,E,4,[[["self"]]]],[11,"step",E,E,4,[[["self"],[R[2]]]]],[11,"step_n",E,E,4,[[["u32"],["i32"],["self"],[R[2]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[3]]]],[11,R[5],E,E,0,[[],[R[3]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[3]]]],[11,R[5],E,E,1,[[],[R[3]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[3]]]],[11,R[5],E,E,2,[[],[R[3]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[27],E,E,4,[[["self"]],[R[57]]]],[11,R[4],E,E,4,[[[U]],[R[3]]]],[11,R[5],E,E,4,[[],[R[3]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[3]]]],[11,R[5],E,E,3,[[],[R[3]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"eq",E,E,3,[[["self"],[R[2]]],["bool"]]],[11,"eq",E,E,0,[[[R[10]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[10]],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[11]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[11]],["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[12]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[12]]],["bool"]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[3]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[3]]]]],"p":[[3,R[14]],[3,"StepPin"],[3,R[15]],[4,R[0]],[3,"Stepper"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);